# config file used to setup TurboSpectrum (TS) run
debug = 0
# TS root directory
ts_root = '/home/semenova/plato-solar/turbospectrum2020'


# list of model atmospheres to use
use_atmos = './atmos.in'

# path to model atmospheres
atmos_path = '/home/semenova/plato-solar/atmos/'
# 'm1d' or 'marcs'
atmos_format = 'm1d'

# path to the linelist(s)
# if several:
# linelist = ['path1', 'path2']
# or
# linelist = 'path1'
linelist = '/home/semenova/plato-solar/line_data/nlte_ges_linelist.txt'
#linelist = '/home/semenova/plato-solar/line_data/nlte_ges_linelist_onlyOxygen_7776.txt'

# which element to run
element = 'O'

# which abundance to use for the computed element?
# 0/1/2
# 0 -- use solar
# 1 -- use new_abund
# 2 -- use a range of abundances from start_abund to end_abund, with step_abund
use_abund = 2

# if use_abund == 1:
new_abund = 8.7

# if use_abund == 2:
# starting abundance
start_abund = 8.5
end_abund = 9.0
step_abund = 0.01

# use nlte?
# if nlte = 1, specify departure coefficient file
# if nlte = 0, lte is used
nlte = 1
# path to the grid of departure coefficients
depart_grid = './NLTEgrid4TS.bin'
aux_file = './auxData_NLTEgrid4TS.dat'
# path to model atom
model_atom_path = '/home/semenova/plato-solar/wrapper-ts/O/'
# model atom naming
model_atom_id = 'o41f'


# starting wavelenght, AA
lam_start = 6000
# last wavelenght, AA
lam_end = 8000
# resolution (R capital)
resolution = 1000000


# ________________________________#
# fitting by default is done within segments
# segments (windows) are defined by linemask and line_offset parameter

# fitting observed spectrum?
fitting = 1

# path to the file with observed spectrum
# if format == kpno, observed_spectrum should be set to path where flux*.txt files are stored
observed_path = '/home/semenova/plato-solar/KPNO/'
# kpno or ascii
observed_format = 'kpno'
# r capital
observed_resolution = 300000
# path to line data, including linemasks
# el-lmask.txt
line_data = '/home/semenova/plato-solar/line_data/'

line_by_line = 1

# how far from the line center to compute spectrum?
# in AA
# NOTE!
# fitting is done only based on the points
# strictly within the linemask (not the segment!)
# 
line_offset = 10

# fit Vmac?
# 0/1
fit_vmac = 1
# in km/s
start_vmac = 0.
end_vmac = 6.0
step_vmac = 0.1

# fit Vrot?
# 0/1
fit_vrot = 1
# in km/s
start_vrot = 1.8
end_vrot = 1.8
step_vrot = 1

